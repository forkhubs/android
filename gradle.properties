# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit http://www.gradle.org/docs/current/userguide/build_environment.html


# MEMORY RELATED CONFIG ====================================================================================================================

# Specifies the JVM arguments used for the daemon process. The setting is particularly useful for tweaking memory settings. Default value:
# -Xmx10248m -XX:MaxPermSize=256m .
org.gradle.jvmargs=-Xmx3g -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:+UseG1GC

# Dex memory allocation should be at least 2gb less than the gradle memory allocation above. This allows for dex in process builds where the
# dex process runs in the same VM as gradle does. For more info see
# https://medium.com/google-developers/faster-android-studio-builds-with-dex-in-process-5988ed8aa37e#.qh098djyi
dexMemoryAllocation=2g


# OTHER GRADLE RELATED CONFIG ==============================================================================================================

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true

# Keep gradle in a daemon thread that doesn't restart for every build, decreases initial build startup time
org.gradle.daemon=f

# Don't configure all modules on every build, decreases build time
org.gradle.configureondemand=true


# DEV LOCAL CONFIG =========================================================================================================================

# Speed hack to decrease development environment build times. Doesn't do anything as it is, but if a developer wants to they can enable this
# speed hack by changing the "ignoreBuildVariantsForDev" property from "false" to "true" and then setup the variant that they want to keep
# with the "ignoreAllFlavoursApartFrom" and "ignoreAllBuildTypesApartFrom" properties. This will get rid of all variants apart from the one
# they declared and make the build considerably faster.
ignoreBuildVariantsForDev=false
ignoreAllFlavoursApartFrom=uk
ignoreAllBuildTypesApartFrom=debug


# JENKINS OVERRIDEN CONFIG =============================================================================================

# Default version number and code to use. These can be overridden on the command line, for example
# ./gradlew -PversCode=4 -PversName=2.1.3 clean assembleQa8UkRelease
customVersionCode=78
customVersionName=3.9.0

# Removes the main test source set from all flavors other than ukDebug. Default true.
runMainTestsForSecondaryVariants=true

# For specific builds running in Jenkins we try to optimize the build time by decreasing dexguard optimization passes. Default false.
jenkinsFastDexguardBuildsEnabled=false

# This flag will sign the release APK with release key if the build environment is setup with release key environment variables.
# Refer (scripts/jenkins/lib/keys.groovy) for the release key environment variables.
# Intended only for CI to override.
buildForPlayStore=false

# This is the default environment for debug builds (can also be changed in the debug drawer at runtime.
# It will help to run an automation build test in different environment using jenkins.
defaultDebugEnvironment=staging2
defaultDebugRwandaEnvironment = qa4
defaultDebugBupaEnvironment=staging2

# This flag will enable/disable test coverage for debug builds. This option is disabled by default so that debugging works properly (see
# https://issuetracker.google.com/issues/37019591 for more details), then it's enabled on Jenkins so that we can generate test coverage
# reports properly.
testCoverageFlag=false

# This flag is used to run specific tests based on cucumber tag, By default it ll run all the tests.
# It will help to run different automation test in different devices using Jenkins.
cucumberInstrumentationTestsTag=@All

android.enableBuildCache=true

